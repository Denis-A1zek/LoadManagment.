<div class="modal" tabindex="-1" style="display: @(IsOpen ? "block" : "none")">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">@Title</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close" @onclick="Close"></button>
            </div>
            <div class="modal-body">
                @ChildContent
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal" @onclick="Close">Закрыть</button>
                @if (OnSave.HasDelegate)
                {
                    <button type="button" class="btn btn-primary" @onclick="Save">Сохранить</button>
                }
            </div>
        </div>
    </div>
</div>

@code {
    [Parameter]
    public bool IsOpen { get; set; }

    [Parameter]
    public string Title { get; set; }

    [Parameter]
    public EventCallback<bool> IsOpenChanged { get; set; }

    [Parameter]
    public EventCallback OnSave { get; set; }

    [Parameter]
    public RenderFragment ChildContent { get; set; }

    private void Close()
    {
        IsOpen = false;
        IsOpenChanged.InvokeAsync(IsOpen);
        StateHasChanged();
    }

    private async Task Save()
    {
        await OnSave.InvokeAsync();
        Close();
        StateHasChanged();
    }

    [Parameter]
    public EventCallback<bool> ValueChanged { get; set; }

    private bool _value = false;

    [Parameter]
    public bool Value
    {
        get { return _value; }
        set { _value = value; }
    }
}
